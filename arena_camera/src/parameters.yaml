arena_camera:
  device_user_id: {
    type: string,
    default_value: "",
    read_only: true,
    description: "User-assigned device ID for camera.",
  }
  serial_number: {
    type: string,
    default_value: "",
    read_only: true,
    description: "Serial number for camera.",
  }

  image_encoding: {
    type: string,
    default_value: "rgb8",
    read_only: true,
    description: "ROS image encoding (see image_encodings.h)",
  }

  camera_frame: {
    type: string,
    default_value: "camera",
    read_only: true,
    description: "ROS TF Frame",
  }

  camera_info_url: {
    type: string,
    default_value: "",
    read_only: true,
    description: "URL for camera calibration",
  }

  frame_rate: {
    type: double,
    default_value: 5.0,
    description: "Frame rate",
    validation: {
      bounds<>: [0.0, 60.0]
    }
  }
  target_brightness: {
    type: int,
    default_value: 128,
    description: "Target brightness (8-bit equivalent)",
    validation: {
      bounds<>: [0, 255]
    }
  }

  auto_exposure: {
    type: bool,
    default_value: True,
    description: "Use in-camera auto-exposure"
  }
  auto_exposure_max_ms: {
    type: double,
    default_value: 100.0,
    description: "Max allowed exposure time (ms).  Set to 0.0 for automatic limit based on frame rate",
    validation: {
      bounds<>: [0, 1000.0]
    }
  }
  exposure_ms: {
    type: double,
    default_value: 20.0,
    description: "Exposure time if auto-exposure is not enabled (ms).",
    validation: {
      bounds<>: [0.01, 1000.0]
    }
  }

  auto_gain: {
    type: bool,
    default_value: True,
    description: "Use in-camera auto-gain"
  }
  gain: {
    type: double,
    default_value: 0.0,
    description: "Gain if auto-gain is not enable (pct 0.0-1.0)",
    validation: {
      bounds<>: [0.0, 1.0]
    }
  }

  gamma: {
    type: double,
    default_value: 2.2,
    description: "Camera gamma (0.0-5.0)",
    validation: {
      bounds<>: [0.0, 5.0]
    }
  }

  # Parameters specific to GigE cameras
  gige:
    mtu_size: {
      type: int,
      default_value: 1500,
      read_only: true,
      description: "Packet size",
      validation: {
        bounds<>: [1,11000]
      }
    }

    inter_pkt_delay: {
      type: int,
      default_value: 1000,
      read_only: true,
      description: "Inter-packet delay in ns",
      validation: {
        bounds<>: [1,15000]
      }
    }

    packet_resend: {
      type: bool,
      default_value: True,
      description: "Enable packet re-send"
    }
