#
name: Build Docker Images

on:
  push:
    branches: [ master]
  workflow_dispatch:
  # pull_request:
  #   paths:
  #     - .docker/**
  #     - .github/workflows/docker.yaml
  # schedule:
  #   - cron: "0 17 * * 6"


env:
  PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'apl-ocean-engineering/arena_camera_ros2') }}

jobs:
  build_docker:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [iron]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into registry
        if: env.PUSH == 'true'
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}



      - name: Docker metadata for build image
        if: env.PUSH == 'true'
        id: ci_meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ matrix.ROS_DISTRO }}-ci

      - name: Build and push "build_image"
        uses: docker/build-push-action@v4.1.1
        with:
          context: .docker
          file: .docker/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          target: ci_image
          tags: ${{ steps.ci_meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ env.PUSH }}



      - name: Docker metadata for final image
        if: env.PUSH == 'true'
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ matrix.ROS_DISTRO }}-${{ github.job }}

      - name: Build and push full image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .docker
          file: .docker/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ env.PUSH }}
