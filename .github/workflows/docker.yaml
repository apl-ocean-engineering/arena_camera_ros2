name: Build Docker Images

on:
  push:
    branches: [ master]
  workflow_dispatch:
  # pull_request:
  #   paths:
  #     - .docker/**
  #     - .github/workflows/docker.yaml
  # schedule:
  #   - cron: "0 17 * * 6"


env:
  PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'apl-ocean-engineering/arena_camera_ros2') }}

jobs:

  docker_build:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [iron]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata for final image
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ matrix.ROS_DISTRO }}-latest
            type=raw,value=latest

      ## It's a little rigid around image labelling
      ## but makes the actions much more readable
      - uses: firehed/multistage-docker-build-action@v1
        id: build
        with:
          dockerfile: .docker/Dockerfile
          context: .docker/
          repository: ghcr.io/${{ github.repository }}
          stages: deps
          testenv-stage: ci
          server-stage: arena_camera_ros2
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}

      ## Testing or deployment can go here
